generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Cloth {
  id           String  @id @default(cuid())
  companyCloth String  @unique
  sheet        Sheet[]
}

model Sheet {
  id              String   @id @default(cuid())
  cuttingDate     DateTime
  color           String
  thanNo          Int
  weightPerLenght Float
  palla           Int
  totalSize       Int
  average         Float
  clothId         String
  Bundle          Bundle[]
  cloth           Cloth    @relation(fields: [clothId], references: [id], onDelete: Cascade)
  Size            Size[]
}

model Size {
  id       String   @id @default(cuid())
  type     String
  quantity Int
  sheetId  String
  Bundle   Bundle[]
  sheet    Sheet    @relation(fields: [sheetId], references: [id], onDelete: Cascade)
}

model Bundle {
  id           String    @id @default(cuid())
  bundleId     String
  sizeId       String
  bundleSize   Int
  sheetId      String
  assignedToId String?
  assignedDate DateTime
  receivedDate DateTime
  assignedTo   Worker?   @relation(fields: [assignedToId], references: [id])
  sheet        Sheet     @relation(fields: [sheetId], references: [id])
  size         Size      @relation(fields: [sizeId], references: [id], onDelete: Cascade)
  payments     Payment[]
}

model Worker {
  id     String   @id @default(cuid())
  name   String
  bundle Bundle[]
}

model Payment {
  id           String   @id @default(cuid())
  advance      Float
  rate         Float
  total        Float
  remarks      String
  bundleId     String?
  receivedDate DateTime
  receivedPcs  Int
  bundle       Bundle?  @relation(fields: [bundleId], references: [id])
}
